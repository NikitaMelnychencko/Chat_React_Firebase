{"version":3,"sources":["components/Modal/Modal.module.scss","components/Message/Massage.module.scss","components/Header/Header.module.scss","components/SendBox/SendBox.module.scss","components/Main/Main.module.scss","components/Footer/Footer.module.scss","components/Main/Main.js","firebaseServise/Init.js","components/Header/Header.jsx","components/Footer/Footer.js","components/Modal/Modal.jsx","firebaseServise/data_featch.js","components/SendBox/SendBox.jsx","components/Modal/SinIn.jsx","components/Modal/SinUp.jsx","components/Modal/AuthForm.jsx","components/Message/Message_Item.jsx","components/Message/Message.jsx","App.js","index.js"],"names":["module","exports","Main","children","className","s","Section","Container","db","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getDatabase","auth","ref","getAuth","Header","currentUser","sessionStorage","getItem","LogOut","signOut","then","removeItem","props","onlineCheck","status","this","online","header","container","type","button","onClick","PureComponent","Footer","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","removeEventListener","createPortal","overlay","modal","closebtn","postUserData","userId","message","a","postListRef","newPostRef","push","set","SendBox","state","handleNameChange","setState","value","toLowerCase","handleSubmit","preventDefault","trim","dataUser","text","userName","time","serverTimestamp","toast","warn","Form","onSubmit","autoComplete","autoFocus","Input","onChange","Button","SinIn","email","pass","name","title","pattern","required","minLength","SinUp","id","AuthForm","sigin","changeModal","handleChange","emailValue","passValue","signInUser","regUser","password","createUserWithEmailAndPassword","userCredential","updateInUser","user","uid","catch","error","console","log","signInWithEmailAndPassword","updateProfile","displayName","content","action","switchbtn","MessageItem","data","Date","curentUser","backColor","Item","style","marginLeft","UserName","background","UserMassage","toLocaleDateString","toLocaleTimeString","Message","starCountRef","onValue","snapshot","val","arr","now","MassageList","map","elm","nanoid","App","showModal","toggleModal","handleFormSubmit","onAuthStateChanged","setItem","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.534df312.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2Lk91\",\"modal\":\"Modal_modal__-b5Ee\",\"button\":\"Modal_button__1dM4W\",\"closebtn\":\"Modal_closebtn__37TpJ Modal_button__1dM4W\",\"switchbtn\":\"Modal_switchbtn__3HtuF Modal_button__1dM4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MassageList\":\"Massage_MassageList__1Mvgr\",\"Item\":\"Massage_Item__2C3j3\",\"UserName\":\"Massage_UserName__1uEPO\",\"UserMassage\":\"Massage_UserMassage__1I3bp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__JsXgo\",\"header\":\"Header_header__3olLd\",\"icon\":\"Header_icon__3cK2I\",\"online\":\"Header_online__oJ0uK Header_icon__3cK2I\",\"offline\":\"Header_offline__1Ghwo Header_icon__3cK2I\",\"button\":\"Header_button__14upi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"SendBox_Form__39Nia\",\"Input\":\"SendBox_Input__1DMAe\",\"Button\":\"SendBox_Button__3ru7A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Main_Section__2y6yl\",\"Container\":\"Main_Container__bHwsu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Footer_Section__1NFnQ\",\"Container\":\"Footer_Container__1V4RF\"};","import PropTypes from 'prop-types';\r\nimport s from './Main.module.scss';\r\n\r\nconst Main = ({ children }) => {\r\n  return (\r\n    <main>\r\n      <section className={s.Section}>\r\n        <div className={s.Container}>{children}</div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nMain.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Main;\r\n","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getDatabase, ref } from 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyB2GhFkUipTzzgiF4QxbwvvRTipNdBzZQk',\r\n  authDomain: 'chat-react-firebase-nande.firebaseapp.com',\r\n  databaseURL:\r\n    'https://chat-react-firebase-nande-default-rtdb.europe-west1.firebasedatabase.app',\r\n  projectId: 'chat-react-firebase-nande',\r\n  storageBucket: 'chat-react-firebase-nande.appspot.com',\r\n  messagingSenderId: '733483402422',\r\n  appId: '1:733483402422:web:b46958be6ebde37b181217',\r\n};\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const db = getDatabase();\r\nexport const dbRef = ref(getDatabase());\r\nexport const auth = getAuth();\r\nexport const user = auth.currentUser;\r\nexport let userId = sessionStorage.getItem('userId');\r\n","import PropTypes from 'prop-types';\r\nimport s from './Header.module.scss';\r\nimport { PureComponent } from 'react';\r\nimport { signOut } from 'firebase/auth';\r\nimport { auth } from '../../firebaseServise/Init';\r\n\r\nclass Header extends PureComponent {\r\n  LogOut = () => {\r\n    return signOut(auth).then(() => {\r\n      // Sign-out successful.\r\n      const userId = null;\r\n      sessionStorage.removeItem('userId');\r\n      this.props.onlineCheck();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const status = this.props.online ? 'online' : 'offline';\r\n    // console.log(this.state.online)\r\n    // console.log(status)\r\n\r\n    return (\r\n      <header className={s.header}>\r\n        <div className={s.container}>\r\n          <div className={s[status]}></div>\r\n\r\n          <div>\r\n            {this.props.online ? (\r\n              <button\r\n                type=\"s.button\"\r\n                className={s.button}\r\n                onClick={this.LogOut}\r\n              >\r\n                <p>LogOut</p>\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"s.button\"\r\n                className={s.button}\r\n                onClick={this.props.onClick}\r\n              >\r\n                <p>LogIn</p>\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Header;\r\n","import PropTypes from 'prop-types';\nimport s from './Footer.module.scss';\n\nconst Footer = ({ children }) => {\n  return (\n    <footer>\n      <section className={s.Section}>\n        <div className={s.Container}>{children}</div>\n      </section>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.scss';\n\n// import { ReactComponent as closeIcon } from '../icons/closeIcon.svg';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends PureComponent {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.overlay} onClick={this.handleBackdropClick}>\n        <div className={s.modal}>\n          <>{this.props.children}</>\n          <button\n            type=\"button\"\n            className={s.closebtn}\n            onClick={this.props.onClose}\n          >\n            {/* <closeIcon width=\"40\" height=\"40\" /> */}\n          </button>\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Modal;\n","import {\r\n  getDatabase,\r\n  ref,\r\n  set,\r\n  get,\r\n  child,\r\n  update,\r\n  remove,\r\n  onChildAdded,\r\n  push,\r\n} from 'firebase/database';\r\nimport { db, dbRef } from './Init';\r\n\r\n// get\r\n// export async function getUser() {\r\n//   let value = await get(child(dbRef, 'message/'))\r\n//     .then(snapshot => {\r\n//       if (snapshot.exists()) {\r\n//         return snapshot.val();\r\n//       } else {\r\n//         return null;\r\n//       }\r\n//     })\r\n//     .catch();\r\n//   let arr = [];\r\n//   console.log(arr);\r\n//   for (let key in value) {\r\n//     arr.push(value[key]);\r\n//   }\r\n//   return arr;\r\n// }\r\n\r\n// Post\r\n\r\nexport async function postUserData(userId, message) {\r\n  if (userId === null) {\r\n    return;\r\n  }\r\n  const postListRef = ref(db, 'message');\r\n  const newPostRef = push(postListRef);\r\n  return await set(newPostRef, {\r\n    message,\r\n  });\r\n  //return await set(ref(db, 'message/' + userId + idMess), message);\r\n}\r\n\r\n// //delete\r\n// export async function deleteData(userId, store, idFilm) {\r\n//   return await remove(ref(db, 'users/' + userId + '/' + store + '/' + idFilm));\r\n// }\r\n","import { PureComponent } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { postUserData } from 'firebaseServise/data_featch';\r\nimport { serverTimestamp } from 'firebase/database';\r\nimport s from './SendBox.module.scss';\r\n\r\nclass SendBox extends PureComponent {\r\n  state = {\r\n    message: '',\r\n  };\r\n\r\n  handleNameChange = e => {\r\n    this.setState({ message: e.currentTarget.value.toLowerCase() });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.message.trim() === '') {\r\n      toast.warn('Input message!');\r\n      return;\r\n    }\r\n\r\n    const dataUser = {\r\n      text: this.state.message,\r\n      userId: sessionStorage.getItem('userId'),\r\n      userName: sessionStorage.getItem('userName'),\r\n      time: serverTimestamp(),\r\n    };\r\n    postUserData(sessionStorage.getItem('userId'), dataUser);\r\n    this.setState({ message: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={s.Form} onSubmit={this.handleSubmit}>\r\n        <textarea\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          className={s.Input}\r\n          value={this.state.message}\r\n          onChange={this.handleNameChange}\r\n        />\r\n        <button type=\"submit\" className={s.Button}>\r\n          {' '}\r\n          Send\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SendBox;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Modal.module.scss';\r\n\r\nconst SinIn = ({ email, pass, onChange }) => {\r\n  // state = {\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"\">\r\n        <span className=\"\">Email</span>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          className=\"\"\r\n          title=\"***@mail.com\"\r\n          pattern=\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n      <label className=\"\">\r\n        <span className=\"\">Password</span>\r\n        <input\r\n          type=\"password\"\r\n          name=\"pass\"\r\n          className=\"\"\r\n          required\r\n          minLength=\"5\"\r\n          value={pass}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nSinIn.propTypes = {\r\n  //   children: PropTypes.node,\r\n};\r\n\r\nexport default SinIn;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Modal.module.scss';\r\n\r\nconst SinUp = ({ name, email, pass, onChange }) => {\r\n  // state = {\r\n\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"\">\r\n        <span className=\"\">Name</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"singup-name\"\r\n          required\r\n          className=\"\"\r\n          value={name}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n      <label className=\"\">\r\n        <span className=\"\">Email</span>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          className=\"\"\r\n          title=\"***@mail.com\"\r\n          pattern=\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n      <label className=\"\">\r\n        <span className=\"\">Password</span>\r\n        <input\r\n          type=\"password\"\r\n          name=\"pass\"\r\n          className=\"\"\r\n          required\r\n          minLength=\"5\"\r\n          value={pass}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nSinUp.propTypes = {\r\n  //   children: PropTypes.node,\r\n};\r\n\r\nexport default SinUp;\r\n","import { PureComponent } from 'react';\r\nimport s from './Modal.module.scss';\r\nimport { auth } from '../../firebaseServise/Init';\r\nimport SinIn from './SinIn';\r\nimport SinUp from './SinUp';\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  updateProfile,\r\n} from 'firebase/auth';\r\n\r\n// import { ReactComponent as closeIcon } from '../icons/closeIcon.svg';\r\n\r\nclass AuthForm extends PureComponent {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    pass: '',\r\n    sigin: true,\r\n  };\r\n\r\n  changeModal = () => {\r\n    this.setState(({ sigin }) => ({\r\n      sigin: !sigin,\r\n    }));\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(this.state.sigin);\r\n\r\n    const emailValue = this.state.email;\r\n    const passValue = this.state.pass;\r\n    // const nameValue = this.state.name;\r\n\r\n    this.props.onClose();\r\n    if (this.state.sigin) {\r\n      this.signInUser(emailValue, passValue);\r\n    } else {\r\n      this.regUser(emailValue, passValue);\r\n      // this.updateInUser(nameValue);\r\n    }\r\n  };\r\n\r\n  // Reg User\r\n  regUser(email, password) {\r\n    return createUserWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        //   swetchClass();\r\n        //   addClass();\r\n        this.props.onlineCheck();\r\n        this.updateInUser(this.state.name);\r\n        return userCredential.user.uid;\r\n      })\r\n      .catch(error => {\r\n        const errorMessage = error.message;\r\n        //   signUpErrorRender(errorMessage);\r\n      });\r\n  }\r\n\r\n  // Aut User\r\n  signInUser(email, password) {\r\n    console.log(email);\r\n    return signInWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        this.props.onlineCheck();\r\n        //   swetchClass();\r\n        //   addClass();\r\n\r\n        // if (localStorage.getItem('idFilm') !== null) {\r\n        //   // updateButton(localStorage.getItem('idFilm'));\r\n        // }\r\n        return userCredential.user;\r\n      })\r\n      .catch(error => {\r\n        const errorMessage = error.message;\r\n        //   signInErrorTextRender(errorMessage);\r\n      });\r\n  }\r\n\r\n  updateInUser(name) {\r\n    // console.log(name);\r\n    return updateProfile(auth.currentUser, {\r\n      displayName: `${name}`,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.emailValue);\r\n\r\n    return (\r\n      <>\r\n        <form\r\n          className={s.content}\r\n          action=\"registration\"\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <div>\r\n            {this.state.sigin ? (\r\n              <SinIn\r\n                email={this.state.email}\r\n                pass={this.state.pass}\r\n                onChange={this.handleChange}\r\n              />\r\n            ) : (\r\n              <SinUp\r\n                name={this.state.name}\r\n                email={this.state.email}\r\n                pass={this.state.pass}\r\n                onChange={this.handleChange}\r\n              />\r\n            )}\r\n          </div>\r\n          <button type=\"submit\" className=\"\" aria-label=\"submit-form\">\r\n            {this.state.sigin ? 'Sign In' : 'Sign Up'}\r\n          </button>\r\n        </form>\r\n        <button\r\n          type=\"button\"\r\n          className={s.switchbtn}\r\n          onClick={this.changeModal}\r\n        >\r\n          {this.state.sigin ? 'Sign Up' : 'Sign In'}\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Massage.module.scss';\r\nconst MessageItem = ({ message }) => {\r\n  const data = new Date(message.time);\r\n  let curentUser = null;\r\n  let backColor = 'red';\r\n  if (sessionStorage.getItem('userName') === message.userName) {\r\n    curentUser = 'auto';\r\n    backColor = 'blue';\r\n  }\r\n  return (\r\n    <li className={s.Item} style={{ marginLeft: curentUser }}>\r\n      <h3 className={s.UserName} style={{ background: backColor }}>\r\n        {message.userName}\r\n      </h3>\r\n      <p className={s.UserMassage}>{message.text}</p>\r\n      <p>\r\n        {data.toLocaleDateString()} {data.toLocaleTimeString()}\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\nMessageItem.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n};\r\nexport default MessageItem;\r\n","import { PureComponent } from 'react';\r\nimport MessageItem from './Message_Item';\r\nimport s from './Massage.module.scss';\r\nimport { toast } from 'react-toastify';\r\nimport { ref, onValue } from 'firebase/database';\r\nimport { db } from 'firebaseServise/Init';\r\nimport { getUser } from 'firebaseServise/data_featch';\r\nimport { nanoid } from 'nanoid';\r\n\r\nclass Message extends PureComponent {\r\n  state = {\r\n    message: [],\r\n  };\r\n  componentDidMount() {\r\n    const starCountRef = ref(db, 'message');\r\n    onValue(starCountRef, snapshot => {\r\n      const data = snapshot.val();\r\n      console.log(data);\r\n      const arr = [];\r\n      for (let now in data) {\r\n        arr.push(data[now].message);\r\n      }\r\n      this.setState({ message: arr });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.state;\r\n    return (\r\n      <ul className={s.MassageList}>\r\n        {message.map(elm => (\r\n          <MessageItem key={nanoid()} message={elm} />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import { PureComponent } from 'react';\r\nimport Main from 'components/Main/Main';\r\nimport Header from 'components/Header/Header';\r\nimport Footer from 'components/Footer/Footer';\r\nimport Modal from 'components/Modal/Modal';\r\nimport SendBox from 'components/SendBox/SendBox';\r\nimport AuthForm from 'components/Modal/AuthForm';\r\nimport Message from 'components/Message/Message';\r\nimport { auth, user } from './firebaseServise/Init';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nclass App extends PureComponent {\r\n  state = {\r\n    showModal: false,\r\n    message: null,\r\n    online: sessionStorage.getItem('userId') === null ? false : true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    return onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        const userId = user.uid;\r\n        sessionStorage.setItem('userName', `${user.displayName}`);\r\n        return sessionStorage.setItem('userId', `${userId}`);\r\n        // this.props.onlineCheck();\r\n      } else {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  handleFormSubmit = message => {\r\n    this.setState({ message });\r\n  };\r\n\r\n  onlineCheck = () => {\r\n    this.setState(({ online }) => ({\r\n      online: sessionStorage.getItem('userId') === null ? false : true,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state.showModal);\r\n    return (\r\n      <>\r\n        <Header\r\n          onClick={this.toggleModal}\r\n          online={this.state.online}\r\n          onlineCheck={this.onlineCheck}\r\n        />\r\n        <Main>{this.state.online && <Message />}</Main>\r\n        <Footer>\r\n          <SendBox onSubmit={this.handleFormSubmit} />\r\n        </Footer>\r\n        {this.state.showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <AuthForm\r\n              onClose={this.toggleModal}\r\n              onlineCheck={this.onlineCheck}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}